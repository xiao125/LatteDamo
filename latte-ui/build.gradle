apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26+'
    testCompile 'junit:junit:4.12'
    compile project(':latte-core')
    //ButterKnife
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
    //Banner依赖
    compile 'com.bigkoo:convenientbanner:2.0.5'
    compile 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'

    //RecyclerView依赖
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.22'
    //RecyclerView 分割线
    compile 'com.choices.divider:RecyclerView_Divider:1.0.0'
    //图片处理
    compile 'com.github.bumptech.glide:glide:4.0.0-RC0'
    compile 'com.github.bumptech.glide:okhttp3-integration:4.0.0-RC0@aar'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0-RC0'
    //auto , Provided :A 、B、C都是Library。A依赖了C，B也依赖了C,App需要同时使用A和B,那么其中A（或者B）可以修改与C的依赖关系为Provided
    //annotationProcessor:只在编译的时候执行依赖的库，但是库最终不打包到apk中，
    provided 'com.google.auto.value:auto-value:1.4.1'
    annotationProcessor "com.google.auto.value:auto-value:1.4.1"

    //View动画依赖
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.easing:library:1.0.1@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
}
